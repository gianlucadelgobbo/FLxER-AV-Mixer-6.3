package FLxER.comp {	import flash.display.Sprite;	import flash.events.Event;	import flash.events.MouseEvent;	import flash.geom.Rectangle;		import FLxER.comp.ButtonRett;	import FLxER.comp.ButtonTxt;	public class SliderCh extends Sprite {		public var curs:ButtonTxt;		public var path:ButtonRett;		private var h:uint;		private var fnz:Function;		private var myInt:Number;		public function SliderCh(xx:Number,yy:Number,ww:uint,hh:uint,f:Function, alt:String):void {			x = xx;			y = yy;			h = hh;			fnz = f;			path = new ButtonRett(0, 0, ww, hh, pathPress, "true", null, .3);			curs = new ButtonTxt(0, 0, ww, 15, "100", myPress, "0", alt);			myInt = path.height-curs.height;			this.addChild(path);			this.addChild(curs);			//this.curs.mouseUpAcivation(myRelease);			this.curs.useHandCursor = false;			this.path.useHandCursor = false;		}		private function pathPress(p:String):void {			curs.y = (this.mouseY<=myInt ? this.mouseY : myInt);			muovi(0);		}		public function resetta():void {			this.curs.y = 0;			enterFrameHandler(null);		}		public function muovi(a:Number):void {			if (this.curs.y+a>=0 && this.curs.y+a<=h-15){				this.curs.y+=a;				enterFrameHandler(null)			}		}		public function setVal(p:uint):void {			trace("1>>>>>>>>>>>>>>>>>>>> "+p)			curs.lab.text = (-int(p-100)).toString();			this.curs.y = (-(parseInt(curs.lab.text)-100)/100)*myInt;			trace("2>>>>>>>>>>>>>>>>>>>> "+curs.y)			//curs.y = ((tmp-minVal)/(maxVal-minVal))*myInt;			var tmp:int = parseInt(curs.lab.text);			fnz(tmp)		}		private function enterFrameHandler(event:Event):void {			var tmp:int = -((this.curs.y/myInt)-1)*100;			this.curs.lab.text = int(tmp).toString();			fnz(tmp);		}		private function myPress(a:String):void {			this.curs.startDrag(false, new Rectangle(0, 0, 0, h-15));			stage.addEventListener(Event.ENTER_FRAME, enterFrameHandler)			stage.addEventListener(MouseEvent.MOUSE_UP, myRelease)		}		private function myRelease(event:Event):void {			this.curs.stopDrag();			stage.removeEventListener(Event.ENTER_FRAME, enterFrameHandler);			stage.removeEventListener(MouseEvent.MOUSE_UP, myRelease)		}	}}