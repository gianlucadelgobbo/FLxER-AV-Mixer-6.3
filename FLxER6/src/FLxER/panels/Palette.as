package FLxER.panels {	import flash.display.Sprite;	import FLxER.main.Rett;	import FLxER.main.Txt;	import flash.geom.Rectangle;	import flash.display.NativeWindow;	import flash.display.NativeWindowInitOptions;	import flash.display.NativeWindowSystemChrome;	import flash.display.NativeWindowType;	import flash.display.StageAlign;    import flash.display.StageScaleMode;	import flash.events.*;    //	public class Palette extends Sprite {		private var fondo:Rett,fondino:Rett,fondo2:Rett;		public var palette:NativeWindow;		public var tit:Txt,txt:Txt;		private var windowOptions:NativeWindowInitOptions;		public function Palette(w:int,h:int,t:String,tt:String=""):void {			//fondo = new Rett(0, 0, Preferences.starterTrgt.stage.fullScreenWidth, Preferences.starterTrgt.stage.fullScreenHeight, Preferences.pref.myCol.bkgCol, -1, .6);			//this.addChild(fondo);			windowOptions = new NativeWindowInitOptions();			windowOptions.systemChrome = NativeWindowSystemChrome.NONE;			windowOptions.type = NativeWindowType.NORMAL;			palette = new NativeWindow(windowOptions);			palette.alwaysInFront = true;			palette.stage.scaleMode = StageScaleMode.NO_SCALE;			palette.stage.align = StageAlign.TOP_LEFT;			palette.bounds = new Rectangle(0, 0, w,h);			palette.stage.nativeWindow.x = int((Preferences.starterTrgt.stage.fullScreenWidth-w)/2);			palette.stage.nativeWindow.y = int((Preferences.starterTrgt.stage.fullScreenHeight-h)/2);			palette.stage.nativeWindow.addEventListener(Event.ACTIVATE, paletteFocus);			palette.stage.addEventListener(MouseEvent.MOUSE_OVER, paletteFocus);			palette.activate();			fondino = new Rett(0, 0, w-1, h-1, null, Preferences.pref.myCol.col, .8);			this.palette.stage.addChild(fondino);			fondo2 = new Rett(0, 0, w-1, 20, Preferences.pref.myCol.brdCol, Preferences.pref.myCol.col, 1);			fondo2.addEventListener(MouseEvent.MOUSE_DOWN, mouseDownHandler)			this.palette.stage.addChild(fondo2);			tit = new Txt(2, -4, 200, 12, t, Preferences.ts, null);			tit.addEventListener(MouseEvent.MOUSE_DOWN, mouseDownHandler)			this.palette.stage.addChild(tit);			tit.scaleX = tit.scaleY = 2;			if (tt!="") {				txt = new Txt(5, 25, w-10, 0, tt, Preferences.ts, null);				this.palette.stage.addChild(txt);			}			palette.addEventListener(Event.CLOSING, closeWindow);		}		private function closeWindow(evt:Event):void {			evt.preventDefault();		}		private function paletteFocus(event:Event):void {			if (Preferences.myAlt) palette.stage.addChild(Preferences.myAlt);		}		private function mouseDownHandler(event:MouseEvent):void {			palette.startMove();		}	}}