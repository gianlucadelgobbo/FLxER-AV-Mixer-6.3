package FLxER.panels {	import flash.display.Sprite;	import flash.utils.*;//	import FLxER.main.Rett;	import FLxER.main.Txt;	import FLxER.comp.CheckBoxBase;//	import FLxER.comp.CheckBoxSeq;	import FLxER.comp.ButtonTxt;//	import FLxER.comp.ListMenu;	public class Tapper extends Sprite {		public var msVal:Number;		private var bpmVal:Number;		private var lastTap:Number;		private var oldMsVal:Number;				public var masterTap:CheckBoxBase;		private var myBpm:ButtonTxt;		private var tapValField:Txt;				public var ch:uint;		//private var myMovie:Player;		private var myParent:ChCtrl;		public function Tapper(xx:int,yy:int,pp:ChCtrl,chch:int):void {			ch = chch;			myParent = pp;			//myMovie = Preferences.monitorTrgt.levels["ch_"+ch];			this.x = xx;			this.y = yy;			bpmVal = 160;			msVal = 60000/bpmVal;			Preferences.msVal["ch_"+ch] = msVal;			this.myBpm = new ButtonTxt(16, 0, 25, 15, "TAP", takeTap, null, " T");			this.addChild(myBpm);			this.tapValField = new Txt(42, 0, 26, 15, bpmVal.toString(), Preferences.th, "input", updateTap);			this.addChild(tapValField);			this.masterTap = new CheckBoxBase(0, 0, 15, 15, "MASTER TAP: ", setMasterTap, null, false);			this.addChild(masterTap);25		}		private function setMasterTap(p:Boolean):void {			myParent.change_ch();			trace("setMasterTap "+p+" "+ch)			Preferences.monitorTrgt.mbuto((getTimer()-Preferences.lastTime)+",setMasterTap,"+ch+","+p);			Preferences.pref.masterTap = p;			var a:int;			for (a=0;a<Preferences.pref.nCh;a++) {				if (p) {					Preferences.interfaceTrgt.chCnt["ch_"+a].mySequencer.setCh(ch);					if (a != myParent.ch) {						Preferences.interfaceTrgt.chCnt["ch_"+a].mySequencer.myTimerOff();						Preferences.interfaceTrgt.chCnt["ch_"+a].myTapper.masterTap.myDisable();					}				} else {					Preferences.interfaceTrgt.chCnt["ch_"+a].mySequencer.setCh(a);					Preferences.interfaceTrgt.chCnt["ch_"+a].mySequencer.myTimer();					Preferences.interfaceTrgt.chCnt["ch_"+a].myTapper.masterTap.myEnable();				}			}		}		public function takeTap(p:String):void {			myParent.change_ch();			if (lastTap) {				Preferences.msVal["ch_"+ch] = msVal = getTimer()-lastTap;				if (int(60000/msVal)>0) {					bpmVal = int(60000/msVal);					this.tapValField.text = int(60000/msVal).toString();				}			}			if (int(60000/msVal)>0) {				updateTap("");			}			lastTap = getTimer();		}		private function updateTap(p:String):void {			bpmVal = parseInt(tapValField.text);			Preferences.msVal["ch_"+ch] = msVal = 60000/bpmVal;			if (myParent.mySequencer.seqStatus) {				if (Preferences.pref.masterTap) {					if (masterTap.myStatus) myParent.mySequencer.myTimer();				} else {					myParent.mySequencer.myTimer();				}			}		}		/*		public function setMasterTapAct(p:Number):void {			oldMsVal = msVal;			msVal = p;			tapValField.text = bpmVal = 60000/msVal;			if (masterTap.myStatus) {				masterTap.myStatus_swap();			}			Preferences.msVal["ch_"+ch] = msVal = 60000/bpmVal;		}		public function setSingleTapAct():void {			msVal = oldMsVal;			tapValField.text = bpmVal = 60000/msVal;			updateTap("")		}		*/	}}