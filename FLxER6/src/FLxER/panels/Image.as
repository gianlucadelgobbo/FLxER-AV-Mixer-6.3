package FLxER.panels{	import flash.display.Sprite;	import flash.utils.*;	import FLxER.main.Txt;	import FLxER.comp.CheckBoxBase;	import FLxER.comp.SliderColors;	public class Image extends Sprite {		//		private var grid:Array		public var hueSlider:SliderColors,satSlider:SliderColors,conSlider:SliderColors,briSlider:SliderColors,thrSlider:SliderColors;		public var thrOnOff:CheckBoxBase;		private var myLab1:Txt,myLab2:Txt,myLab3:Txt,myLab4:Txt,myLab5:Txt;		private var ch:uint;		//private var myMovie:Player;		private var myParent:ChCtrl;		public function Image(xx:int,yy:int,pp:ChCtrl,chch:int):void {			ch = chch;			myParent = pp;			//myMovie = Preferences.monitorTrgt.levels["ch_"+ch];			this.x = xx;			this.y = yy;			this.myLab1 = new Txt(-1, 0, 0, 0, "Hue", Preferences.th, null);			this.addChild(myLab1);			this.myLab2 = new Txt(-1, 16, 0, 0, "Sat", Preferences.th, null);			this.addChild(myLab2);			this.myLab3 = new Txt(-1, 32, 0, 0, "Con", Preferences.th, null);			this.addChild(myLab3);			this.myLab4 = new Txt(125, 0, 0, 0, "Bri", Preferences.th, null);			this.addChild(myLab4);			this.myLab5 = new Txt(125, 16, 0, 0, "Thr", Preferences.th, null);			this.addChild(myLab5);			this.hueSlider = new SliderColors(28,  0, 93, 15, 0x000000, 0, 0, 360, myShowSlide, "vid", "Y + MOVE X MOUSE", myParent);			this.addChild(hueSlider);			this.satSlider = new SliderColors(28, 16, 93, 15, 0x000000, 100, 0, 200, myShowSlide, "vid", "O + MOVE X MOUSE", myParent);			this.addChild(satSlider);			this.conSlider = new SliderColors(28, 32, 93, 15, 0x000000, 0, -100, 100, myShowSlide, "vid", "P + MOVE X MOUSE", myParent);			this.addChild(conSlider);			this.briSlider = new SliderColors(148,  0, 93, 15, 0x000000, 0, -255, 255, myShowSlide, "vid", "V + SHIFT + MOVE X MOUSE", myParent);			this.addChild(briSlider);			this.thrSlider = new SliderColors(164, 16, 77, 15, 0x000000, 128, 1, 255, myShowSlide, "vid", "N + SHIFT + MOVE X MOUSE", myParent);			this.addChild(thrSlider);			this.thrOnOff = new CheckBoxBase(148, 16, 15, 15, "THRESHOLD: ", myShowCheckBox, null, false);			this.addChild(thrOnOff);/*			_root.mdf.td(this, "myLab1", -1, 0, "Hue");			_root.mdf.td(this, "myLab2", -1, 15, "Sat");			_root.mdf.td(this, "myLab3", -1, 22, "");			_root.mdf.td(this, "myLab4", 115, 0, "");			_root.mdf.td(this, "myLab5", 115, 15, "");			_root.myClassedMC(FLxER.comp.sliderColors, this, "hueSlider", {x:18, y:0, w:93, h:10, col:0x000000, myStart:0, maxVal:360, minVal:0, fnzTrgt:this, fnz:"myShow", param:"r,CM,CMT,rb", alt:"Y + MOVE X MOUSE"});			_root.myClassedMC(FLxER.comp.sliderColors, this, "satSlider", {x:18, y:15, w:93, h:10, col:0x000000, myStart:100, maxVal:300, minVal:-300, fnzTrgt:this, fnz:"myShow", param:"g,CM,CMT,gb", alt:"O + MOVE X MOUSE"});			_root.myClassedMC(FLxER.comp.sliderColors, this, "conSlider", {x:18, y:22, w:93, h:10, col:0x000000, myStart:0, maxVal:500, minVal:-200, fnzTrgt:this, fnz:"myShow", param:"b,CM,CMT,bb", alt:"P + MOVE X MOUSE"});			_root.myClassedMC(FLxER.comp.sliderColors, this, "briSlider", {x:128, y:0, w:93, h:10, col:0x000000, myStart:0, maxVal:255, minVal:-255, fnzTrgt:this, fnz:"myShow", param:"rb,CF,CFT,rb", alt:"V + MOVE X MOUSE"});			_root.myClassedMC(FLxER.comp.sliderColors, this, "thrSlider", {x:138, y:15, w:83, h:10, col:0x000000, myStart:128, maxVal:255, minVal:0, fnzTrgt:this, fnz:"myShow", param:"gb,CF,CFT,gb", alt:"N + MOVE X MOUSE"});			_root.myClassedMC(FLxER.comp.checkBox, this, "thrOnOff", {x:128, y:15, w:9, h:9, myStatus:false, fnzTrgt:this, fnz:"myShow", txt:"THRESHOLD: "});			//_root.myClassedMC(FLxER.comp.sliderColors, this, "bconSlider", {x:155, y:22, w:100, h:10, col:0x0000FF, myStart:0, maxVal:255, minVal:0, fnzTrgt:this, fnz:"myShow", param:"bb,CF,CFT,bb", alt:"B + SHIFT + MOVE X MOUSE"});	//*/			//_root.mdf.td(this, "myLab3", 109, 22, "Con");			grid = new Array();			var a:uint;			var b:uint;			for (b=0; b < 4; b++) {				for (a=0; a < 4; a++) {					grid.push(new CheckBoxBase(284+(a*12), b*12, 11, 11, "'", myShowCheckBox, null, a==b));					//this.addChild(grid["cb_" + b + "" + a]);					//_root.myClassedMC(FLxER.comp.checkBox, this, "cb_" + b + "" + a, {x:223+(a*9), y:(b*9), w:7, h:7, myStatus:(a==b), fnzTrgt:this, fnz:"myShow", txt:"'"});					//this["cb_" + b + "" + a].visible= false					//var n=grid.push(gridButt["cb_" + b + "" + a]);					//grid[n - 1].addEventListener("click",this);				}			}			for (a=0; a < grid.length; a++) {				this.addChild(grid[a]);			}		}		public function resetta():void {			myParent.change_ch();			this.hueSlider.resetta();			this.satSlider.resetta();			this.conSlider.resetta();			this.briSlider.resetta();			this.thrSlider.resetta();			this.thrOnOff.resetta();			for (var a:uint=0; a < grid.length; a++) {				grid[a].resetta();			}		}		public function calculate():String {			trace("calculate1")			var cr:Number=grid[0].myStatus?1:0 | grid[1].myStatus?2:0 | grid[2].myStatus?4:0 | grid[3].myStatus?8:0;			var cg:Number=grid[4].myStatus?1:0 | grid[5].myStatus?2:0 | grid[6].myStatus?4:0 | grid[7].myStatus?8:0;			var cb:Number=grid[8].myStatus?1:0 | grid[9].myStatus?2:0 | grid[10].myStatus?4:0 | grid[11].myStatus?8:0;			var ca:Number=grid[12].myStatus?1:0 | grid[13].myStatus?2:0 | grid[14].myStatus?4:0 | grid[15].myStatus?8:0;			var hue:Number = -this.hueSlider.getVal();			var sat:Number = -this.satSlider.getVal()/100;			var con:Number = -(this.conSlider.getVal())/100;			var bri:Number = -(this.briSlider.getVal());			var thr:Number = (this.thrOnOff.myStatus ? -this.thrSlider.getVal() : -1);			trace("cr "+cr)			trace("cg "+cg)			trace("cb "+cb)			trace("ca "+ca)			trace("hue "+hue)			trace("sat "+sat)			trace("con "+con)			trace("bri "+bri)			trace("ther "+thr);			return (cr+","+cg+","+cb+","+ca+","+hue+","+sat+","+con+","+bri+","+thr);		}		private function myShowCheckBox(pp:String):void {			myShow();		}		private function myShowSlide(pp:String, v:Number):void {			myShow();		}		private function myShow():void {			myParent.change_ch();			var tmp:String = calculate();			myParent.lastLiveAct = ",setMatrix,"+myParent.ch+","+tmp;			if (myParent.myMonitorPreviewChannel.myPreviewActive) {				myParent.myMonitorPreviewChannel.mbuto((getTimer()-Preferences.lastTime)+myParent.lastLiveAct);			}			if (myParent.outStatus) {				Preferences.monitorTrgt.mbuto((getTimer()-Preferences.lastTime)+myParent.lastLiveAct);			} else {				myParent.liveA.setMatrix = myParent.lastLiveAct;			}		}	}}